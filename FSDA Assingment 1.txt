create database ineuron_assignment
use ineuron_assignment

#task_1
create table shopping_history1(
 product varchar not null,
 quantity integer not null,
 unit_price integer not null
 );
 insert into shopping_history1(product,quantity,unit_price) values
 ('milk',3,10),
 ('bread',7,3),
 ('bread',5,2);

select * from shopping_history1

select product,sum(quantity*unit_price)   as total_price from shopping_history1 
group by product
order by product desc

#task2

##1.

create table phones(
name varchar(20) not null unique,
phone_number integer not null unique);

create table calls(
id integer not null,
caller integer not null,
calle integer not null,
duration integer not null,
unique(id)
)

insert into phones values
('Jack',1234),
('Lena',3333),
('Mark',9999),
('Anna',7582);

insert into calls values
(25,1234,7582,8),
(7,9999,7582,1),
(18,9999,3333,4),
(2,7582,3333,3),
(3,3333,1234,1),
(21,3333,1234,1);

select * from phones
select * from calls;

with call_duration as
(select caller as phone_number,sum(duration)as Duration from calls group by caller
UNION ALL
select calle as phone_number,sum(duration) as Duration from calls group by calle)
select name
from phones p inner join call_duration c on p.phone_number=c.phone_number group by p.name having sum(Duration)>=10 order by p.name;

##2.

create table phones1(
name varchar(20) not null unique,
phone_number integer not null unique);

insert into phones1 values('John',6356),
('Addison',4315),
('Kate',8003),
('Ginny',9831);

create table calls1(
id integer not null,
caller integer not null,
calle integer not null,
duration integer not null,
unique(id)
)

insert into calls1 values(65,8003,9831,7),
(100,9831,8003,3),
(145,4315,9831,18);

select caller as phone_number,sum(duration) as Duration from calls1 group by caller
UNION ALL
select calle as phone_number,sum(duration)as Duration from calls1 group by calle

with duration_call as(
select caller as phone_number,sum(duration) as Duration from calls1 group by caller
UNION ALL
select calle as phone_number,sum(duration)as Duration from calls1 group by calle)
select p1.name from phones1 p1 inner join duration_call d1 on p1.phone_number=d1.phone_number group by name having sum(Duration)>=10 order by name

#task3

##1.
create table transactions1(
amount int not null,
`date` date not null
);

insert into transactions1 values(1000,'2020-01-06'),
(-10,'2020-01-14'),
(-75,'2020-01-20'),
(-5,'2020-01-25'),
(-4,'2020-01-29'),
(2000,'2020-03-10'),
(-75,'2020-03-12'),
(-20,'2020-03-15'),
(40,'2020-03-15'),
(-50,'2020-03-17'),
(200,'2020-10-10'),
(-200,'2020-10-10')

select generate_series(2020-01-01,2020-12-31,'1 month') from transactions1

